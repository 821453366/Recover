<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eu.front.dao.StorageDao">
    <!-- Storage的resultMap,column是给数据库列起的别名,它对应property类的属性-->
    <resultMap id="result_Storage_Map" type="com.eu.front.entity.Storage">
        <id column="id" property="id" />
        <result column="storage_code" property="storageCode" />
        <result column="storage_name" property="storageName" />
        <result column="storage_capacity" property="storageCapacity" />
    </resultMap>

    <!-- 数据库中表名为:tb_storage的列名,as前是数据库的列明,as后是列的别名用于映射成实体类中的属性,需要注意的是别名必须与resultMap中的column别名一致 -->
    <sql id="tb_storage_Column">
        tb_storage.id as id
        ,tb_storage.storage_code as storage_code
        ,tb_storage.storage_name as storage_name
        ,tb_storage.storage_capacity as storage_capacity
    </sql>

    <!--获得类名为:Storage对应的数据库表的数据总行数 -->
    <select id="getStorageRowCount" resultType="java.lang.Long">
        select count(id) from tb_storage
    </select>
    <!-- 获得类名为:Storage对应数据库中表的数据集合 -->
    <select id="selectStorage" resultMap="result_Storage_Map">
        select 
        <include refid="tb_storage_Column" /> 
        from tb_storage
    </select> 

    <!-- 获得一个Storage对象,以参数Storage对象中不为空的属性作为条件进行查询-->
    <select id="selectStorageByObj" parameterType="com.eu.front.entity.Storage" resultMap="result_Storage_Map">
        select 
            <include refid="tb_storage_Column" /> 
        from tb_storage
        <where>
            <if test="storageCapacity != null "> and tb_storage.storage_capacity = #{storageCapacity}</if>
            <if test="storageName != null "> and tb_storage.storage_name = #{storageName}</if>
            <if test="storageCode != null "> and tb_storage.storage_code = #{storageCode}</if>
            <if test="id != null "> and tb_storage.id = #{id}</if>
        </where>
    </select> 

    <!-- 通过Storage的id获得对应数据库中表的数据对象-->
    <select id="selectStorageById" parameterType="java.lang.Integer" resultMap="result_Storage_Map">
        select 
            <include refid="tb_storage_Column" /> 
        from tb_storage
        where tb_storage.id = #{id}
    </select> 

    <!-- 将Storage插入到对应数据库的表中,包括属性值为null的数据-->

    <insert id="insertStorage" parameterType="com.eu.front.entity.Storage">
        insert into tb_storage(id,storage_code,storage_name,storage_capacity) 
        values(#{id},#{storageCode},#{storageName},#{storageCapacity})
    </insert>

    <!-- 将Storage中属性值不为null的数据,插入到对应数据库的表中-->
    <insert id="insertNonEmptyStorage" parameterType="com.eu.front.entity.Storage">
        insert into tb_storage
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="storageCode != null">storage_code,</if>
            <if test="storageName != null">storage_name,</if>
            <if test="storageCapacity != null">storage_capacity,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null"> #{id},</if>
            <if test="storageCode != null"> #{storageCode},</if>
            <if test="storageName != null"> #{storageName},</if>
            <if test="storageCapacity != null"> #{storageCapacity},</if>
        </trim>
    </insert>

    <!-- 通过Storage的id将数据库表中对应的数据删除-->
    <delete id="deleteStorageById" parameterType="java.lang.Integer">
        delete from tb_storage
        where id = #{id}
    </delete>

    <!-- 通过Storage的id将Storage的数据更新到数据库中对应的表,包括值null的数据-->
    <update id="updateStorageById" parameterType="com.eu.front.entity.Storage">
        update tb_storage set
            storage_code=#{storageCode}
            ,storage_name=#{storageName}
            ,storage_capacity=#{storageCapacity}
        where id=#{id}
    </update>

    <!-- 通过Storage的id将Storage中属性值不为null的数据更新到数据库对应的表中-->
    <update id="updateNonEmptyStorageById" parameterType="com.eu.front.entity.Storage">
        update tb_storage
        <set>
            <if test="storageCode != null">
                storage_code=#{storageCode},
            </if>
            <if test="storageName != null">
                storage_name=#{storageName},
            </if>
            <if test="storageCapacity != null">
                storage_capacity=#{storageCapacity},
            </if>
        </set>
        where id=#{id}
    </update>

</mapper>